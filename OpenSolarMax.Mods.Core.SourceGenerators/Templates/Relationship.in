using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using Arch.Core;
using OpenSolarMax.Mods.Core.Components;
using OpenSolarMax.Mods.Core.Utils;

namespace @NAMESPACE@;

partial @RELATIONSHIP_SYMBOL@ @RELATIONSHIP_TYPE@ : IRelationshipRecord
{
    static Type[] IRelationshipRecord.ParticipantTypes => [@PARTICIPANTS_TYPES@];

    readonly int ILookup<Type, Entity>.Count => @PARTICIPANTS_COUNT@;

    readonly IEnumerable<Entity> ILookup<Type, Entity>.this[Type key]
    {
        get
        {
            @INDEXER_BODY@
        }
    }

    readonly bool ILookup<Type, Entity>.Contains(Type key)
    {
        return @CONTAINS_EXPRESSION@;
    }

    readonly IEnumerator<IGrouping<Type, Entity>> IEnumerable<IGrouping<Type, Entity>>.GetEnumerator()
    {
        @ENUMERATOR_BODY@
    }

    readonly IEnumerator IEnumerable.GetEnumerator()
    {
        return (this as IEnumerable<IGrouping<Type, Entity>>).GetEnumerator();
    }
}
